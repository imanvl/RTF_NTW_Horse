filename = ...
    [pwd '\_results\tableOfResults', networkName, '.xlsx'];
sheet = 'Stats - 90 Percentile';

%% Header row
methods = {...
    'orig',...
    'anan',...
    'bara',...
    'batt',...
    'dreh',...
    'mast2',...
    'maxe'};

xlRange = 'D1';

xlswrite(...
    filename,...
    methods,...
    sheet,...
    xlRange)

%% Header column

xlswrite(...
    filename,...
    {'Statistics'},...
    sheet,...
    'A2')

statistics = {...
    '# of links'; ...
    'Density'; ...
    'Avg Degree'; ...
    'Med Degree'; ...
    'Assortativity'; ...
    'Clustering'; ...
    'Lender Dep'; ...
    'Borrower Dep'; ...
    'Core Size (% banks)';...
    'Error score(% links)'};

xlswrite(...
    filename,...
    statistics,...
    sheet,...
    'B3')

xlswrite(...
    filename,...
    {'Similarity'},...
    sheet,...
    'A13')

similarities ={...
    'Hamming';...
    'Jaccard';...
    'Cosine';...
    'Jensen'};

xlswrite(...
    filename,...
    similarities,...
    sheet,...
    'B14')

xlswrite(...
    filename,...
    {'Confusion Matrix'},...
    sheet,...
    'A18')

confusionMatrix = {...
    'True Positives';...
    'True Negatives';...
    'False Positives';...
    'False Negatives';...
    'Accuracy'};

xlswrite(...
    filename,...
    confusionMatrix,...
    sheet,...
    'B19')

xlswrite(...
    filename,...
    {'DebtRank'},...
    sheet,...
    'A24')

debtRanks ={...
    'Top 1';...
    'Top 3';...
    'Correlation';...
    'Overlap 1';...
    'Overlap 3'};

xlswrite(...
    filename,...
    debtRanks,...
    sheet,...
    'B25')

column = ['D'; 'E'; 'F'; 'G'; 'H';'I';'J'];

%% Format statistics

statisticsList = {...
    'Links',...
    'Density',...
    'MeanDeg',...
    'MedoDeg',...
    'SymPearson',...
    'Cmit',...
    'LendDep',...
    'BoroDep',...
    'coresize',...
    'score'};

for i = 1 : length(methods)
    technique = methods{i};
    
    for j = 1 : length(statisticsList)
        metric = statisticsList{j};
        
        xlRange = [column(i) num2str(2+j)];
        
        xlswrite(...
            filename,...
            quantile(outputMatrices.(technique).(metric),0.1),...
            sheet,...
            xlRange)
    end
end

%% Format similarity

similarityList = {...
    'hamming',...
    'jaccard',...
    'cosine',...
    'jensen'};

for i = 1 : length(methods)
    technique = methods{i};
    
    for j = 1 : length(similarityList)
        metric = similarityList{j};
        
        xlRange = [column(i) num2str(11+j)];
        xlswrite(...
            filename,...
            quantile(outputMatrices.(technique).similarity.(metric),0.9),...
            sheet,...
            xlRange)
    end
end

%% Format Confusion Matrix

confusionMatrixList = {...
    'truePositives',...
    'trueNegatives',...
    'falsePositives',...
    'falseNegatives',...
    'accuracy'};

for i = 1 : length(methods)
    technique = methods{i};
    
    for j = 1 : length(confusionMatrixList)
        metric = confusionMatrixList{j};
        
        xlRange = [column(i) num2str(16+j)];
        xlswrite(...
            filename,...
            quantile(outputMatrices.(technique).confusionMatrix.(metric),0.9),...
            sheet,...
            xlRange)
    end
end

%% Format DebtRank results

debtRankList = {...
    'top1',...
    'top3',...
    'corr',...
    'overlap1',...
    'overlap3'};

for i = 1 : length(methods)
    technique = methods{i};
    
    for j = 1 : length(debtRankList)
        metric = debtRankList{j};
        
        xlRange = [column(i) num2str(22+j)];
        xlswrite(...
            filename,...
            quantile(1 * outputMatrices.(technique).(metric),0.9),...
            sheet,...
            xlRange)
    end
end